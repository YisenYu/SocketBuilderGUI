using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using EthanYuWPFKit.Util;

namespace Model
{
    public class FileHelper
    {
        public static void FileDelete(string file)
        {
            FileInfo f = new FileInfo(@file);
            if (f.Exists) { f.Delete(); }
        }
        public static void FileCut(string src, string target)
        {
            FileInfo temp = new FileInfo(@src);
            temp.MoveTo(target);
        }




        public static void FileHeaderWriter(StreamWriter sw)
        {
            sw.WriteLine("# -- Socket Builder Software Version: 1.0.0 -- ");
            sw.WriteLine("# -- Generated by Socket Builder -- ");
        }

        public static void WriteSection(StreamWriter sw, string section, bool start)
        {
            StringBuilder str = new StringBuilder();
            if(start==true) 
                str.Append("<").Append(section).Append(">");
            else
                str.Append("</").Append(section).Append(">");
            sw.WriteLine(str);
        }

        public static void WriteItem(StreamWriter sw, string key, object value)
        {
            StringBuilder str = new StringBuilder();
            str.Append("[").Append(key).Append("] ").Append(CommonHelper.ObjectToString(value)).Append(";");
            sw.WriteLine(str);
        }

        public static void WriteItems(StreamWriter sw, string key, params object[] list)
        {
            StringBuilder str = new StringBuilder();
            str.Append("[").Append(key).Append("] ").Append(Strings2OneString(list)).Append(";");
            sw.WriteLine(str);
        }

        public static void WriteItemMultiLine(StreamWriter sw, string key, object value)
        {
            StringBuilder str = new StringBuilder();
            str.Append("[").Append(key).Append("]");
            sw.WriteLine(str);
            string multistr = CommonHelper.ObjectToString(value);
            sw.WriteLine(multistr);
        }


        public static string Strings2OneString(params object[] list)
        {
            StringBuilder str = new StringBuilder();
            foreach (object item in list)
            {
                str.Append(CommonHelper.ObjectToString(item)).Append(", ");
            }
            int len = str.Length;
            str.Length = len - 2;
            return str.ToString();
        }
    }
}
